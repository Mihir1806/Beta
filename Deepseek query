let
    // Assume your source data is in a table named "ErrorLog"
    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WclTSUTI0MDAwVYrViVZyBFLGQMoESJkCKTMgZQ6kLICUJZCyAlLWQMqGqBk2QMoWSNkBKXsg5QCkHIGUE5ByBlIuQMqVqBmuQMoNSLkDKQ8g5QmkPIGUF5DyBlI+QMqXqBl+QMofSAUAKX8gFQCkAoFUEFCvQiwA", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [JobName = _t, ErrorText = _t]),
    
    // Sample ToolList table - replace with your actual data source
    ToolList = Table.FromRows(
        Json.Document(Binary.Decompress(Binary.FromText("i45WclTSUTI0MDAwVYrViVZyBFLGQMoESJkCKTMgZQ6kLICUJZCyAlLWQMqGqBk2QMoWSNkBKXsg5QCkHIGUE5ByBlIuQMqVqBmuQMoNSLkDKQ8g5QmkPIGUF5DyBlI+QMqXqBl+QMofSAUAKX8gFQCkAoFUEFCvQiwA", BinaryEncoding.Base64), Compression.Deflate)), 
        let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [ToolId = _t, ToolName = _t, JobName = _t]
    ),
    
    // Custom function to extract and replace ToolIds
    ReplaceToolIds = (errorText as text, jobName as text) as text =>
        let
            // Extract all ToolId numbers from the error text
            ToolIdMatches = Text.Split(Text.Combine(List.Select(
                Text.Split(errorText, " "), 
                each Text.StartsWith(_, "Toolid") or Text.StartsWith(_, "ToolId") or Text.StartsWith(_, "toolid")
            ), " "), " "),
            
            // Get distinct ToolIds
            ToolIds = List.Distinct(List.RemoveItems(ToolIdMatches, {"Toolid", "ToolId", "toolid"})),
            
            // Replace each ToolId with ToolId <number> (<Tool Name>)
            ReplaceEachId = List.Accumulate(
                ToolIds,
                errorText,
                (currentText, toolId) =>
                    let
                        // Look up the tool name in ToolList table
                        ToolName = try 
                            Table.SelectRows(ToolList, each [ToolId] = toolId and [JobName] = jobName){0}[ToolName] 
                        otherwise "Unknown Tool",
                        
                        // Create the replacement string
                        Replacement = "ToolId " & toolId & " (" & ToolName & ")"
                    in
                        Text.Replace(currentText, "Toolid " & toolId, Replacement)
            )
        in
            ReplaceEachId,
    
    // Apply the function to each row
    AddedCustom = Table.AddColumn(Source, "FormattedErrorText", each ReplaceToolIds([ErrorText], [JobName]), type text)
in
    AddedCustom