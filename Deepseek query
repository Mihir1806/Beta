from flask import Flask, request, render_template_string
import re

app = Flask(__name__)

def convert_alteryx_to_sql(formula: str) -> str:
    # Normalize smart quotes
    formula = formula.replace('‚Äò', "'").replace('‚Äô', "'").replace('‚Äú', '"').replace('‚Äù', '"')
    
    # Remove multiline comments
    formula = re.sub(r'/\*.*?\*/', '', formula, flags=re.DOTALL)

    # Break into lines and clean
    lines = [line.strip() for line in formula.strip().split('\n') if line.strip()]
    sql_lines = []
    case_stack = []

    for line in lines:
        upper = line.upper()

        # Handle IF...ELSEIF...ELSE...ENDIF
        if upper.startswith("IF "):
            condition = re.sub(r'^IF\s+', '', line, flags=re.I).rstrip("THEN").strip()
            sql_lines.append("CASE")
            sql_lines.append(f"    WHEN {condition} THEN")
            case_stack.append("CASE")
        elif upper.startswith("ELSEIF "):
            condition = re.sub(r'^ELSEIF\s+', '', line, flags=re.I).rstrip("THEN").strip()
            sql_lines.append(f"    WHEN {condition} THEN")
        elif upper.startswith("ELSE"):
            sql_lines.append("    ELSE")
        elif upper.startswith("ENDIF"):
            if case_stack:
                sql_lines.append("END")
                case_stack.pop()
        else:
            if sql_lines and any(kw in sql_lines[-1] for kw in ["THEN", "ELSE"]):
                sql_lines[-1] += f" '{line}'"
            else:
                sql_lines.append(line)

    sql = '\n'.join(sql_lines)

    # Common Alteryx function replacements
    patterns = [
        (r'\bToNumber\s*\((.*?)\)', r'CAST(\1 AS FLOAT)'),
        (r'\bToString\s*\((.*?)\)', r'CAST(\1 AS VARCHAR)'),
        (r'\bDateTimeNow\s*\(\)', r'CURRENT_TIMESTAMP'),
        (r'\bDateTimeToday\s*\(\)', r'CAST(CURRENT_DATE AS TIMESTAMP)'),
        (r'\bDateTimeAdd\s*\(\s*(.+?),\s*(.+?),\s*"(.*?)"\s*\)', r'DATEADD(\3, \2, \1)'),
        (r'\bDateTimeDiff\s*\(\s*(.+?),\s*(.+?),\s*"(.*?)"\s*\)', r'DATEDIFF(\3, \1, \2)'),
        (r'\bDateTimeFormat\s*\(\s*(.+?),\s*"(.*?)"\s*\)', r"FORMAT(\1, '\2')"),
        (r'\bDateTimeParse\s*\(\s*(.+?),\s*"(.*?)"\s*\)', r"CAST(\1 AS TIMESTAMP)"),
    ]

    for pattern, replacement in patterns:
        sql = re.sub(pattern, replacement, sql, flags=re.IGNORECASE)

    return sql.strip()

# Full HTML UI
HTML_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
    <title>Alteryx to SQL Converter</title>
    <style>
        body { font-family: Consolas, monospace; background: #111; color: #eee; padding: 20px; }
        h1 { color: #0f0; }
        textarea, pre {
            width: 100%; padding: 10px; background: #222; color: #0f0;
            border: 1px solid #555; font-family: Consolas, monospace;
            margin-top: 10px; resize: vertical;
        }
        button {
            background-color: #0f0; color: #000; padding: 10px 20px;
            border: none; cursor: pointer; font-weight: bold; margin-top: 10px;
        }
        button:hover { background-color: #5f5; }
        .output { margin-top: 20px; }
        .error { color: #f33; font-weight: bold; }
    </style>
</head>
<body>
    <h1>üîÑ Alteryx Formula ‚Üí SQL Converter</h1>
    <form method="post">
        <label>Paste your Alteryx Formula below:</label><br>
        <textarea name="formula" rows="10">{{ formula or '' }}</textarea><br>
        <button type="submit">Convert</button>
    </form>

    {% if error %}
        <div class="error">Error: {{ error }}</div>
    {% endif %}

    {% if result %}
    <div class="output">
        <h2>‚úÖ Converted SQL:</h2>
        <pre>{{ result }}</pre>
    </div>
    {% endif %}
</body>
</html>
"""

@app.route('/', methods=['GET', 'POST'])
def index():
    formula = request.form.get('formula', '')
    result = ''
    error = ''
    if formula:
        try:
            result = convert_alteryx_to_sql(formula)
        except Exception as e:
            error = str(e)
    return render_template_string(HTML_TEMPLATE, formula=formula, result=result, error=error)

if __name__ == '__main__':
    app.run(debug=True)