let
    errorText = [Error],
    jobName = [Job Name],
    toolIdMatches = 
        if errorText <> null then
            let
                extractAll = Text.RegexReplace(errorText, "([Tt]ool[Ii]d\s\d+)", "#(tab)\1"),
                splitList = Text.Split(extractAll, "#(tab)"),
                cleanExtract = List.Select(List.Transform(splitList, each Text.Trim(_)), each Text.StartsWith(_, "ToolId"))
            in
                cleanExtract
        else
            {},
    transformToolIds = 
        List.Transform(toolIdMatches, each 
            let
                toolIdFull = _,   // Already "ToolId 451"
                filteredTool = Table.SelectRows(ToolList, each [Job Name] = jobName and [Tool ID] = toolIdFull),
                toolNameFound = if Table.RowCount(filteredTool) > 0 then filteredTool{0}[Tool Name] else null,
                replacementText = if toolNameFound <> null then toolIdFull & " (Tool Name- " & toolNameFound & ")" else toolIdFull
            in
                [Original = toolIdFull, Replacement = replacementText]
        ),
    updatedError = 
        List.Accumulate(transformToolIds, errorText, (state, current) => Text.Replace(state, current[Original], current[Replacement]))
in
    updatedError










let
    errorText = [Error],
    jobName = [Job Name],
    toolIdMatches = 
        if errorText <> null then
            let
                matches = Text.RegexReplace(errorText, ".*?(ToolId\s\d+).*", "$1"),
                allMatches = Text.RegexReplace(errorText, ".*?(ToolId\s\d+).*", "$1"),
                allToolIds = Text.RegexReplace(errorText, ".*?(ToolId\s\d+).*", "$1"),
                extractAll = List.Transform(Text.RegexReplace(errorText, "([Tt]ool[Ii]d\s\d+)", "#(tab)\1").Split("#(tab)"), Text.Trim),
                cleanExtract = List.Select(extractAll, each Text.StartsWith(_, "ToolId"))
            in
                cleanExtract
        else
            {},
    transformToolIds = 
        List.Transform(toolIdMatches, each 
            let
                toolIdFull = _,   // Already "ToolId 451"
                filteredTool = Table.SelectRows(ToolList, each [Job Name] = jobName and [Tool ID] = toolIdFull),
                toolNameFound = if Table.RowCount(filteredTool) > 0 then filteredTool{0}[Tool Name] else null,
                replacementText = if toolNameFound <> null then toolIdFull & " (Tool Name- " & toolNameFound & ")" else toolIdFull
            in
                [Original = toolIdFull, Replacement = replacementText]
        ),
    updatedError = 
        List.Accumulate(transformToolIds, errorText, (state, current) => Text.Replace(state, current[Original], current[Replacement]))
in
    updatedError






let 
    errorText = [Error],
    jobName = [Job Name],
    toolIdFound = 
        if errorText <> null and Text.Contains(errorText, "ToolId") then
            let
                afterToolId = Text.AfterDelimiter(errorText, "ToolId "),
                extractedId = Text.BeforeDelimiter(afterToolId, ":")
            in
                Text.Trim(extractedId)
        else
            null,
    toolIdFull = 
        if toolIdFound <> null then 
            "ToolId " & toolIdFound 
        else 
            null,
    toolRecord = 
        if toolIdFull <> null then
            let 
                filteredTool = Table.SelectRows(Tool_List, each [Job Name] = jobName and [Tool ID] = toolIdFull)
            in 
                if Table.RowCount(filteredTool) > 0 then 
                    filteredTool{0}[Tool Name]
                else 
                    null
        else
            null,
    updatedError = 
        if toolIdFull <> null and toolRecord <> null then
            Text.Replace(errorText, toolIdFull, toolIdFull & " (Tool Name- " & toolRecord & ")")
        else
            errorText
in
    updatedError


