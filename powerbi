# 'dataset' is the input DataFrame from Power BI
import pandas as pd
import re

# Ensure 'Subject' is string
dataset['Subject'] = dataset['Subject'].astype(str)

# Extract only first word that starts with 'in_'
def extract_job_name(text):
    matches = re.findall(r'\bin_[\w]+', text)
    return matches[0] if matches else None

dataset['Job_Name'] = dataset['Subject'].apply(extract_job_name)


= if Text.Contains([Subject], "in_") then "in_" & Text.BeforeAny(Text.After([Subject], "in_"), {" ", ","}) else null


if Text.Contains([Status], "Failure") then 
    let
        previewText = [Preview],
        startPos = Text.PositionOf(previewText, "\\"),
        result = if startPos >= 0 then Text.Middle(previewText, startPos) else "failed with no path"
    in
        result
else 
    null

= if Text.Contains([Subject], "in_") then "in_" & Text.BeforeAny(Text.After([Subject], "in_"), {" ", ","}) else null


= if Text.Contains([Subject], "IN_") then 
    "IN_" & Text.BeforeAny(Text.After([Subject], "IN_"), {" ", ",", ".", ";", ":", ")", "(", "-", "_"})
else 
    ""



HyperlinkPath = 
IF(
    LEFT([Path], 2) = "\\", 
    "file://" & SUBSTITUTE([Path], "\", "/"), 
    BLANK()
)


= if Text.StartsWith([Path], "\\") then "file://" & Text.Replace([Path], "\", "/") else "




# 'dataset' is the input DataFrame from Power BI
import pandas as pd
import re

# Ensure 'Subject' is string
dataset['Subject'] = dataset['Subject'].astype(str)

# Extract first word that starts with 'in_', 'IN_', or 'KR_'
def extract_job_name(text):
    matches = re.findall(r'\b(?:in_|IN_|KR_)\w+', text)
    return matches[0] if matches else None

dataset['Job_Name'] = dataset['Subject'].apply(extract_job_name)




# 'dataset' is the input DataFrame from Power BI
import pandas as pd
import re

# Ensure 'Subject' is string
dataset['Subject'] = dataset['Subject'].astype(str)

# Extract only 'IN' or 'KR' based on pattern match
def extract_prefix(text):
    if re.search(r'\bIN_[A-Za-z0-9]+', text):
        return "IN"
    elif re.search(r'\bKR_[A-Za-z0-9]+', text):
        return "KR"
    else:
        return ""

dataset['Job_Name'] = dataset['Subject'].apply(extract_prefix)


