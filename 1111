def parent_child(self):
    print("[INFO] Starting parent-child classification...")

    def check_parent(row):
        code = str(row['SubProduct']).strip()
        # Check parent for each Niv column (reverse order)
        niv_columns = ['Niv6', 'Niv5', 'Niv4', 'Niv3', 'Niv2', 'Niv1']
        for niv in niv_columns:
            match_row = self.SubProduct[self.SubProduct['Code'] == code]
            if not match_row.empty:
                parent_code = match_row[niv].values[0]
                if pd.notna(parent_code) and parent_code in self.result3['Type of operation'].values:
                    return f"{code} is child of {parent_code}"
        return f"{code} has no matching parent in Type of operation"

    # Apply parent-child check
    self.result3.loc[:, 'parent_match'] = self.result3.apply(check_parent, axis=1)

    # Split into result3A and result3B
    self.result3A = self.result3[self.result3['parent_match'].str.contains('is child of', na=False)].copy()
    self.result3B = self.result3[~self.result3['parent_match'].str.contains('is child of', na=False)].copy()

    print(f"[SUCCESS] Completed parent-child mapping.")
    print(f"[INFO] Total records with parent match (result3A): {len(self.result3A)}")
    print(f"[INFO] Total records without parent match (result3B): {len(self.result3B)}")